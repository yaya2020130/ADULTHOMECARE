{"ast":null,"code":"import _classCallCheck from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React from'react';// import Secound from './layout/Secound'\nimport{BrowserRouter as Router,Route}from\"react-router-dom\";// import './App.css';\nimport Navbar from'./components/Navbar';import Patient from'./layout/Patient';import API from'./utils/API';import Footer from\"./components/Footer\";import LogBook from'./layout/LogBook';import Login from'./layout/Login';import Employee from'./layout/employee';import Manager from'./layout/Manager';import AddManager from'./layout/AddManager';import AddPatient from'./layout/AddPatients';import AddEmployee from'./layout/AddEmployee';import Logout from\"./layout/Logout\";var App=/*#__PURE__*/function(_React$Component){_inherits(App,_React$Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={data:{},user:{firstname:'devin'}};_this.isLogedin=function(userData){console.log(userData);_this.setState({user:userData});localStorage.setItem('currentUser',JSON.stringify(userData));};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;console.log(\"componentDidMount\");//  const currentUser= JSON.parse(localStorage.getItem('currentUser') )\n//  if(currentUser){\n//    console.log('in app', currentUser)\n//     this.setState({user:currentUser.user})\n//  }\n//  const currentUser= localStorage.getItem('currentUser') ? this.setState(JSON.parse(localStorage.getItem('currentUser'))) :\nAPI.getAllPatients().then(function(res){_this2.setState({data:res.data});}).catch(function(err){return console.log(err);});}},{key:\"render\",value:function render(){var _this3=this;return/*#__PURE__*/React.createElement(Router,null,/*#__PURE__*/React.createElement(Navbar,{currentUser:this.state.user}),/*#__PURE__*/React.createElement(Route,{exact:true,path:[\"/\",\"/login\"],component:function component(){return/*#__PURE__*/React.createElement(Login,{isLogedin:_this3.isLogedin});}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/logbook/:id\",component:function component(){return/*#__PURE__*/React.createElement(LogBook,{data:_this3.state.user});}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/patient/:id\",component:Manager}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/api/logout\",component:Logout}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/patient\",component:Patient}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/api/manager\",component:AddManager}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/api/employee\",component:AddEmployee}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/newEntry\",component:function component(){return/*#__PURE__*/React.createElement(AddPatient,{currentUser:_this3.state.user});}}),/*#__PURE__*/React.createElement(Route,{exact:true,path:\"/patient\",component:function component(){return/*#__PURE__*/React.createElement(Patient,{data:_this3.state.data,user:_this3.state.user});}}),/*#__PURE__*/React.createElement(Footer,null));}}]);return App;}(React.Component);export default App;","map":{"version":3,"sources":["/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/src/App.js"],"names":["React","BrowserRouter","Router","Route","Navbar","Patient","API","Footer","LogBook","Login","Employee","Manager","AddManager","AddPatient","AddEmployee","Logout","App","state","data","user","firstname","isLogedin","userData","console","log","setState","localStorage","setItem","JSON","stringify","getAllPatients","then","res","catch","err","Component"],"mappings":"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","sourcesContent":["import React from 'react';\n// import Secound from './layout/Secound'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n \n \n\n// import './App.css';\n\nimport Navbar from './components/Navbar';\nimport Patient from './layout/Patient';\nimport API from './utils/API';\nimport Footer from \"./components/Footer\";\nimport LogBook from './layout/LogBook'\nimport Login from './layout/Login';\nimport Employee from './layout/employee';\nimport Manager from './layout/Manager';\nimport AddManager from './layout/AddManager';\nimport AddPatient from './layout/AddPatients';\nimport AddEmployee from './layout/AddEmployee';\nimport Logout from \"./layout/Logout\";\n\nclass App extends React.Component {\n  state = { data:{} , user: {firstname: 'devin'}}\n\n  isLogedin = (userData) => {\n    console.log(userData)\n    this.setState({\n      user: userData,\n      \n    })\n    localStorage.setItem('currentUser', JSON.stringify(userData))\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n  //  const currentUser= JSON.parse(localStorage.getItem('currentUser') )\n  //  if(currentUser){\n  //    console.log('in app', currentUser)\n  //     this.setState({user:currentUser.user})\n  //  }\n\n  //  const currentUser= localStorage.getItem('currentUser') ? this.setState(JSON.parse(localStorage.getItem('currentUser'))) :\n   \n   API.getAllPatients()\n      .then(res=>{\n       this.setState({data:res.data})\n      }).catch(err=>console.log(err))\n  }\n\n\n\n\n  render() {\n    return (\n   \n  <Router> \n   \n        <Navbar currentUser={this.state.user} />\n       \n        <Route exact path={[ \"/\",\"/login\"]} component={() => <Login isLogedin={this.isLogedin} />} />\n        <Route exact path=\"/logbook/:id\" component={() => <LogBook data={this.state.user} />} />\n        <Route exact path=\"/patient/:id\" component={Manager} />\n        <Route exact path=\"/api/logout\" component={Logout} />\n        <Route exact path=\"/patient\" component={Patient} />\n        <Route exact path=\"/api/manager\" component={AddManager}/>\n        <Route exact path=\"/api/employee\" component={AddEmployee}/>\n        <Route exact path=\"/newEntry\" component={() => <AddPatient currentUser={this.state.user}  />} />\n        {/* <Route exact path=\"/patient/:id\" component={LogBook} /> */}\n        {/* <Route exact path=\"/apiLogbook/:id\" component={Employee} /> */}\n        <Route exact path=\"/patient\" component={() => <Patient data={this.state.data} user={this.state.user} />} />\n\n        <Footer/>\n</Router> \n     \n\n\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}