{"ast":null,"code":"import axios from \"axios\"; // import logInbtn from \"../components/LogInBtn\"; \n\nconst BASE_URL = \"http://localhost:8080\";\nexport default {\n  getPatientData: id => axios.get(`${BASE_URL}/patient/${id}`),\n  // getPatientLog: (id) => axios.get(`${BASE_URL}/log/${id}`),\n  getAllPatients: function () {\n    console.log(\"getallpatientsrunning\");\n    return axios.get(`${BASE_URL}/patients`);\n  },\n  // getAllPatients: ()=> axios.get(`${BASE_URL}/patients`),\n  createEmployee: function (employeeData) {\n    return axios.post(`${BASE_URL}/api/employee`, employeeData, {\n      withCredentials: true\n    });\n  },\n  createPatient: function (patientData) {\n    console.log(\"createPatient\");\n    return axios.post(`http://localhost:8080/api/createPatient`, patientData, {\n      withCredentials: true\n    });\n  },\n  createManager: function (managerData) {\n    return axios.post(`${BASE_URL}/api/manager`, managerData, {\n      withCredentials: true\n    });\n  },\n  // login btn\n  getLogInbtn: id => axios.post(`${BASE_URL}/` + id),\n  // creating a route that appdates the patients ifo\n  updatePatientById: (data, id) => {\n    return axios.put(`${BASE_URL}/api/patient/${id}`, data);\n  },\n  login: data => axios.post(`${BASE_URL}/login`, data),\n  signup: data => axios.post(`${BASE_URL}/api/signup`, data),\n  save: data => axios.put(`${BASE_URL}/api/save`),\n  logout: function () {\n    return axios.get(`${BASE_URL}/logout`, {\n      withCredentials: true\n    });\n  },\n  saveChange: function (Data) {\n    return axios.put(`${BASE_URL}/api/patient`, Data);\n  },\n  Logout: () => axios.destroy(`${BASE_URL}/api/logout`),\n  getCurrentUser: () => axios.get('/api/currentuser')\n};","map":{"version":3,"sources":["/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/src/utils/API.js"],"names":["axios","BASE_URL","getPatientData","id","get","getAllPatients","console","log","createEmployee","employeeData","post","withCredentials","createPatient","patientData","createManager","managerData","getLogInbtn","updatePatientById","data","put","login","signup","save","logout","saveChange","Data","Logout","destroy","getCurrentUser"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;;AACA,MAAMC,QAAQ,GAAG,uBAAjB;AACA,eAAe;AACbC,EAAAA,cAAc,EAAGC,EAAD,IAAQH,KAAK,CAACI,GAAN,CAAW,GAAEH,QAAS,YAAWE,EAAG,EAApC,CADX;AAEb;AACAE,EAAAA,cAAc,EAAE,YAAY;AAC1BC,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,WAAOP,KAAK,CAACI,GAAN,CAAW,GAAEH,QAAS,WAAtB,CAAP;AACD,GANY;AAOb;AACAO,EAAAA,cAAc,EAAE,UAAUC,YAAV,EAAwB;AACtC,WAAOT,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,eAAvB,EAAuCQ,YAAvC,EAAqD;AAAEE,MAAAA,eAAe,EAAE;AAAnB,KAArD,CAAP;AACD,GAVY;AAWbC,EAAAA,aAAa,EAAE,UAAUC,WAAV,EAAuB;AACpCP,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,WAAOP,KAAK,CAACU,IAAN,CAAY,yCAAZ,EAAsDG,WAAtD,EAAmE;AAAEF,MAAAA,eAAe,EAAE;AAAnB,KAAnE,CAAP;AACD,GAdY;AAebG,EAAAA,aAAa,EAAE,UAAUC,WAAV,EAAuB;AACpC,WAAOf,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,cAAvB,EAAsCc,WAAtC,EAAmD;AAAEJ,MAAAA,eAAe,EAAE;AAAnB,KAAnD,CAAP;AACD,GAjBY;AAmBb;AACAK,EAAAA,WAAW,EAAGb,EAAD,IACXH,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,GAAZ,GAAiBE,EAA5B,CArBW;AAsBb;AACAc,EAAAA,iBAAiB,EAAE,CAACC,IAAD,EAAMf,EAAN,KAAa;AAC9B,WAAOH,KAAK,CAACmB,GAAN,CAAW,GAAElB,QAAS,gBAAeE,EAAG,EAAxC,EAA2Ce,IAA3C,CAAP;AACD,GAzBY;AA0BbE,EAAAA,KAAK,EAAGF,IAAD,IAAUlB,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,QAAvB,EAAgCiB,IAAhC,CA1BJ;AA2BbG,EAAAA,MAAM,EAAGH,IAAD,IAAUlB,KAAK,CAACU,IAAN,CAAY,GAAET,QAAS,aAAvB,EAAqCiB,IAArC,CA3BL;AA4BbI,EAAAA,IAAI,EAAGJ,IAAD,IAAUlB,KAAK,CAACmB,GAAN,CAAW,GAAElB,QAAS,WAAtB,CA5BH;AA6BbsB,EAAAA,MAAM,EAAE,YAAY;AAClB,WAAOvB,KAAK,CAACI,GAAN,CAAW,GAAEH,QAAS,SAAtB,EAAgC;AAAEU,MAAAA,eAAe,EAAE;AAAnB,KAAhC,CAAP;AACD,GA/BY;AAgCba,EAAAA,UAAU,EAAE,UAAUC,IAAV,EAAgB;AAC1B,WAAOzB,KAAK,CAACmB,GAAN,CAAW,GAAElB,QAAS,cAAtB,EAAqCwB,IAArC,CAAP;AACD,GAlCY;AAmCbC,EAAAA,MAAM,EAAE,MAAM1B,KAAK,CAAC2B,OAAN,CAAe,GAAE1B,QAAS,aAA1B,CAnCD;AAoCb2B,EAAAA,cAAc,EAAE,MAAM5B,KAAK,CAACI,GAAN,CAAU,kBAAV;AApCT,CAAf","sourcesContent":["import axios from \"axios\";\n// import logInbtn from \"../components/LogInBtn\"; \nconst BASE_URL = \"http://localhost:8080\"\nexport default {\n  getPatientData: (id) => axios.get(`${BASE_URL}/patient/${id}`),\n  // getPatientLog: (id) => axios.get(`${BASE_URL}/log/${id}`),\n  getAllPatients: function () {\n    console.log(\"getallpatientsrunning\")\n    return axios.get(`${BASE_URL}/patients`)\n  },\n  // getAllPatients: ()=> axios.get(`${BASE_URL}/patients`),\n  createEmployee: function (employeeData) {\n    return axios.post(`${BASE_URL}/api/employee`, employeeData, { withCredentials: true })\n  },\n  createPatient: function (patientData) {\n    console.log(\"createPatient\")\n    return axios.post(`http://localhost:8080/api/createPatient`, patientData, { withCredentials: true })\n  },\n  createManager: function (managerData) {\n    return axios.post(`${BASE_URL}/api/manager`, managerData, { withCredentials: true })\n  },\n\n  // login btn\n  getLogInbtn: (id) =>\n    axios.post(`${BASE_URL}/` + id),\n  // creating a route that appdates the patients ifo\n  updatePatientById: (data,id) => {\n    return axios.put(`${BASE_URL}/api/patient/${id}`, data)\n  },\n  login: (data) => axios.post(`${BASE_URL}/login`, data),\n  signup: (data) => axios.post(`${BASE_URL}/api/signup`, data),\n  save: (data) => axios.put(`${BASE_URL}/api/save`),\n  logout: function () {\n    return axios.get(`${BASE_URL}/logout`, { withCredentials: true })\n  },\n  saveChange: function (Data) {\n    return axios.put(`${BASE_URL}/api/patient`, Data)\n  },\n  Logout: () => axios.destroy(`${BASE_URL}/api/logout`),\n  getCurrentUser: () => axios.get('/api/currentuser')\n}\n"]},"metadata":{},"sourceType":"module"}