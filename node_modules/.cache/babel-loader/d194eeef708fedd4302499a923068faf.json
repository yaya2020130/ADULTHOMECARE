{"ast":null,"code":"import _defineProperty from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _objectSpread from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from\"react\";import API from'../utils/API';import{useParams}from\"react-router-dom\";import Food from'./Food';import Container from'../components/Container/Container';import Calendar from\"react-calendar\";import axios from\"axios\";import{Link}from'react-router-dom';import{render}from\"@testing-library/react\";function LogBook(props){// created the use state to update the table\nvar _useState=useState(''),_useState2=_slicedToArray(_useState,2),date=_useState2[0],setDate=_useState2[1];var _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),formObject=_useState4[0],setTableObject=_useState4[1];var _useState5=useState({}),_useState6=_slicedToArray(_useState5,2),patientData=_useState6[0],setPatientData=_useState6[1];var params=useParams();console.log(props.data);// using the api a data is collected from the database by id for a single patient\nuseEffect(function(){API.getPatientData(params.id).then(function(res){setPatientData(res.data);});},[]);function ubdatePatient(){API.updatePatientById(formObject,params.id).then(function(res){setPatientData(res.data);}).catch(function(err){return console.log(err);});}// Handles updating component state when the user types into the input field\nfunction handleInputChange(event){var _event$target=event.target,name=_event$target.name,value=_event$target.value;setTableObject(_objectSpread(_objectSpread({},formObject),{},_defineProperty({},name,value)));};// function for the calendar\nfunction handleCalendarInput(date){setTableObject(_objectSpread(_objectSpread({},formObject),{},{date:date}));}function handleTableChange(event){event.preventDefault();API.updatePatientById(formObject,patientData.id).then(function(res){return ubdatePatient();}).catch(function(err){return console.log(err);});};function handleCheckbox(){setTableObject(_objectSpread(_objectSpread({},formObject),{},{isFoodEaten:!formObject.isFoodEaten,isMedicineTaken:!formObject.isMedicineTaken}));}function handleCheckboxf(){setTableObject(_objectSpread(_objectSpread({},formObject),{},{isMedicine:!formObject.isMedicine}));}return/*#__PURE__*/React.createElement(\"div\",{className:\"container1\"},/*#__PURE__*/React.createElement(\"div\",{className:\"row\"},/*#__PURE__*/React.createElement(\"div\",{className:\"col s4\"},patientData.isMedicine?\"\":/*#__PURE__*/React.createElement(\"h3\",null,\"Patient has to take medicine!\"),patientData.isFoodEaten?\"\":/*#__PURE__*/React.createElement(\"h3\",null,\"Patient has to eat food!\"),patientData.doctorAppointment?\"\":/*#__PURE__*/React.createElement(\"h3\",null,\"Patient has to see the doctor \",patientData.date,\"!\")),/*#__PURE__*/React.createElement(\"div\",{className:\"col s8\"},/*#__PURE__*/React.createElement(\"table\",{striped:true,bordered:true,hover:true,variant:\"dark\"},/*#__PURE__*/React.createElement(\"thead\",null,/*#__PURE__*/React.createElement(\"tr\",{className:\"table1\"},/*#__PURE__*/React.createElement(\"th\",{className:\"col-1\"},\" Item\"),/*#__PURE__*/React.createElement(\"th\",{className:\"col-2\"},\"value\"),/*#__PURE__*/React.createElement(\"th\",{className:\"col-3\"},\"  LoggedBy:\",props.data?props.data.firstname:\"\",\" \"))),/*#__PURE__*/React.createElement(\"tbody\",{className:\"TableBody\"},/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"First Name\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.firstname),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{name:\"firstname\",value:formObject.firstname,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Last Name\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.lastname),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{name:\"lastname\",value:formObject.lastname,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Age\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.age),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{name:\"age\",value:formObject.age,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Address\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.address),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{name:\"address\",value:formObject.address,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Phone\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.phone_no),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"input\",{name:\"phnoe_number \",value:formObject.phone_no,onChange:handleInputChange}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Did the patient take Medicine\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.isMedicineTaken),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Food,{name:\"medicine \",isChecked:formObject.isMedicine,handleCheckbox:handleCheckboxf}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Did the patient eat Food\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.isFoodEaten),/*#__PURE__*/React.createElement(\"td\",null,\" \",/*#__PURE__*/React.createElement(Food,{name:\"isFoodEaten\",isChecked:formObject.isFoodEaten,handleCheckbox:handleCheckbox})))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"Doctors Appointment\"),/*#__PURE__*/React.createElement(\"td\",null,patientData.date),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(Calendar,{name:\"calendar\",onChange:handleCalendarInput}))),/*#__PURE__*/React.createElement(\"tr\",null,/*#__PURE__*/React.createElement(\"td\",null,\"PatientReview\"),/*#__PURE__*/React.createElement(\"td\",null,/*#__PURE__*/React.createElement(\"label\",null,/*#__PURE__*/React.createElement(\"textarea\",{name:\"address\",value:formObject.address,onChange:handleInputChange})))))),/*#__PURE__*/React.createElement(\"button\",{class:\"btn waves-effect dangerous\",onClick:handleTableChange},\"Submit\"),/*#__PURE__*/React.createElement(\"span\",null,/*#__PURE__*/React.createElement(Link,{to:\"/patient\"},/*#__PURE__*/React.createElement(\"button\",{class:\"btn waves-effect dangerous\"},\"go back\")),\" \"))));}export default LogBook;","map":{"version":3,"sources":["/Users/yaredgebrie/Desktop/code/ADULTHOMECARE/src/layout/LogBook.js"],"names":["React","useEffect","useState","API","useParams","Food","Container","Calendar","axios","Link","render","LogBook","props","date","setDate","formObject","setTableObject","patientData","setPatientData","params","console","log","data","getPatientData","id","then","res","ubdatePatient","updatePatientById","catch","err","handleInputChange","event","target","name","value","handleCalendarInput","handleTableChange","preventDefault","handleCheckbox","isFoodEaten","isMedicineTaken","handleCheckboxf","isMedicine","doctorAppointment","firstname","lastname","age","address","phone_no"],"mappings":"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","sourcesContent":["\nimport React, { useEffect, useState } from \"react\";\nimport API from '../utils/API';\nimport { useParams } from \"react-router-dom\";\nimport Food from './Food'\nimport Container from '../components/Container/Container'\nimport Calendar from \"react-calendar\"\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom'\nimport { render } from \"@testing-library/react\";\nfunction LogBook(props) {\n  // created the use state to update the table\n  const [date, setDate] = useState('')\n  const [formObject, setTableObject] = useState({})\n  const [patientData, setPatientData] = useState({})\n\n\n  const params = useParams()\n  console.log(props.data)\n  // using the api a data is collected from the database by id for a single patient\n  useEffect(() => {\n    API.getPatientData(params.id).then(res => {\n      setPatientData(res.data)\n    })\n\n  }, [])\n\n  function ubdatePatient() {\n    API.updatePatientById(formObject, params.id).then(res => {\n      setPatientData(res.data)\n    })\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setTableObject({ ...formObject, [name]: value })\n  };\n  // function for the calendar\n\n  function handleCalendarInput(date) {\n    setTableObject({ ...formObject, date })\n  }\n  function handleTableChange(event) {\n    event.preventDefault();\n    API.updatePatientById(\n      formObject, patientData.id\n    )\n      .then(res => ubdatePatient())\n      .catch(err => console.log(err));\n\n  };\n  function handleCheckbox() {\n    setTableObject({\n      ...formObject,\n      isFoodEaten: !formObject.isFoodEaten,\n      isMedicineTaken: !formObject.isMedicineTaken\n\n    })\n  }\n  function handleCheckboxf() {\n    setTableObject({\n      ...formObject,\n      isMedicine: !formObject.isMedicine\n    })\n  }\n\n  return (\n\n\n\n    <div className=\"container1\" >\n      <div className=\"row\">\n        <div className=\"col s4\">\n\n          {patientData.isMedicine ? \"\" : <h3>Patient has to take medicine!</h3>}\n          {patientData.isFoodEaten ? \"\" : <h3>Patient has to eat food!</h3>}\n          {patientData.doctorAppointment ? \"\" : <h3>Patient has to see the doctor {patientData.date}!</h3>}\n        </div>\n        <div className=\"col s8\">\n          {/* <table class=\"striped\"> */}\n          <table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr className=\"table1\">\n                <th className=\"col-1\"> Item</th>\n                <th className=\"col-2\">value</th>\n                <th className=\"col-3\">  LoggedBy:{props.data ? props.data.firstname : \"\"} </th>\n\n\n                {/* <th> LoggedBy:{props.data ? props.data.firstname : \"\"}</th> */}\n\n              </tr>\n            </thead>\n\n            <tbody className=\"TableBody\">\n              <tr>\n                <td>First Name</td>\n                <td>{patientData.firstname}</td>\n                <td><input name=\"firstname\" value={formObject.firstname} onChange={handleInputChange}></input></td>\n              </tr>\n              <tr>\n                <td>Last Name</td>\n                <td>{patientData.lastname}</td>\n                <td><input name=\"lastname\" value={formObject.lastname} onChange={handleInputChange} ></input></td>\n              </tr>\n              <tr>\n                <td>Age</td>\n                <td>{patientData.age}</td>\n                <td><input name=\"age\" value={formObject.age} onChange={handleInputChange}     ></input></td>\n\n              </tr>\n              <tr>\n                <td>Address</td>\n                <td>{patientData.address}</td>\n                <td><input name=\"address\" value={formObject.address} onChange={handleInputChange}      ></input></td>\n\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>{patientData.phone_no}</td>\n                <td><input name=\"phnoe_number \" value={formObject.phone_no} onChange={handleInputChange}     ></input></td>\n\n              </tr>\n              <tr>\n                <td>Did the patient take Medicine</td>\n                <td>{patientData.isMedicineTaken}</td>\n                <td><Food name=\"medicine \" isChecked={formObject.isMedicine} handleCheckbox={handleCheckboxf}    ></Food></td>\n\n              </tr>\n              <tr>\n\n                <td>\n                  <td>Did the patient eat Food</td>\n                  <td>{patientData.isFoodEaten}</td>\n                  <td> <Food name=\"isFoodEaten\" isChecked={formObject.isFoodEaten} handleCheckbox={handleCheckbox}></Food></td>\n\n\n                </td>\n\n              </tr>\n\n              <tr >\n                <td>Doctors Appointment</td>\n                <td>{patientData.date}</td>\n                <td><Calendar name=\"calendar\" onChange={handleCalendarInput} /></td>\n\n              </tr>\n              <tr>\n                <td>PatientReview</td><td>\n                  <label>\n                    <textarea name=\"address\" value={formObject.address} onChange={handleInputChange} />\n                  </label>\n                </td>\n              </tr>\n            </tbody>\n          </table    >\n          <button class=\"btn waves-effect dangerous\" onClick={handleTableChange}>Submit</button>\n\n          <span><Link to=\"/patient\">\n            <button class=\"btn waves-effect dangerous\">go back</button>\n          </Link> </span>\n        </div>\n\n      </div>\n\n\n    </div>\n  );\n}\nexport default LogBook;\n"]},"metadata":{},"sourceType":"module"}