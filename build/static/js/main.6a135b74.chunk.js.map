{"version":3,"sources":["layout/patientAvatar.jpeg","components/Navbar/index.js","layout/Secound.js","utils/API.js","layout/Food.js","layout/LogBook.js","layout/Patient.js","components/Footer/index.js","layout/Login.js","layout/Manager.js","layout/AddManager/index.js","layout/AddPatients/index.js","layout/AddEmployee/index.js","layout/Logout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","props","console","log","currentUser","user","className","href","username","to","isAdmin","Secound","patientData","goToLogbook","setActivePatient","class","onClick","firstname","lastname","src","require","alt","email","phone_number","BASE_URL","id","axios","get","employeeData","post","withCredentials","managerData","data","put","destroy","Food","type","name","checked","isChecked","onChange","handleCheckbox","LogBook","useState","formObject","setTableObject","setPatientData","params","useParams","handleInputChange","event","target","value","useEffect","API","then","res","isMedicine","isFoodEaten","doctorAppointment","date","striped","bordered","hover","variant","age","address","phone_no","isMedicineTaken","preventDefault","catch","err","activePatient","history","useHistory","patient","push","length","map","Footer","Login","setUsername","password","setPassword","login","setLogin","logout","setLogout","userOption","setUserOption","options","defaultOption","placeholder","e","option","label","isLogedin","current","Manager","AddManager","managerState","setManagerState","for","phone","newManager","AddPatient","doctor_appointment","patientReview","patientState","setPatientState","newPatient","AddEmployee","hireDate","salary","bonus","start_time","end_time","employeeState","setEmployeeState","hiredate","newEmployee","Logout","state","navigate","localStorage","clear","setState","this","onclick","Component","App","userData","setItem","JSON","stringify","Navbar","exact","path","component","Patient","React","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.6a135b74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/patientAvatar.6f165089.jpeg\";","import React from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default (props) => {\n  console.log(\"props.currentUser\", props.currentUser.user)\n\n  return (\n    <nav>\n      <div className='nav-wrapper'>\n        <a href=\"#\" className=\"brand-logo right \" >DAYA App</a>\n\n        <ul className='navbar-nav'>\n          <li className='nav-item'>\n            {props.currentUser.user ? <h5>Welcome, {props.currentUser.user.username}</h5> : \"\"}\n          </li>\n\n          {props.currentUser.user ?\n            <>\n              {/* <li className='nav-item'>\n          <Link to=\"/login\" className={window.location.pathname === \"/login\" ? \"nav-link active\" : \"nav-link\"}>\n            Login\n            </Link>\n        </li> */}\n\n              <li className='nav-item'>\n          <Link to=\"/patients\" className=\"nav-link\">\n          \n            </Link>\n        </li>\n        \n            </> : \n\n           \"\"\n            \n            \n           \n            \n            \n            }\n\n          {props.currentUser.user && props.currentUser.user.isAdmin ?\n            <div>\n                <>\n              <div>\n                \n             \n                <li className=\"nav-item\">\n                  <Link to=\"/patient\" className=\"nav-link\">\n                    Manager\n              </Link>\n                </li>\n                {/* <li className=\"nav-item\">\n                  <Link to=\"/api/employee\">\n                    AddEmployee\n              </Link>\n                </li> */}\n                <li className=\"nav-item\">\n                  <Link to=\"/newEntry\">\n                    Addpatient\n              </Link>\n                </li>\n              </div>\n           \n              \n                  <li className=\"nav-item\">\n                    <Link to=\"/login\" className=\"nav-link\">\n                      Log Out\n                </Link>\n                  </li>\n                </>\n              \n                <div>\n                  {/* <li className=\"nav-item\">\n                    <Link to=\"/\" className=\"nav-link\">\n                      Login\n              </Link>\n                  </li> */}\n                  {/* <li className=\"nav-item\">\n                    <Link to=\"signup\" className=\"nav-link\">\n                      Sign Up\n              </Link>\n                  </li> */}\n                </div>\n            </div>\n\n            : \"\"}\n\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\n\n","import React from 'react';\n\nfunction Secound({ patientData, setActivePatient, goToLogbook }) {\n  return (\n\n    <>\n\n      <div class=\"col s12 m6 l4\">\n        <div class=\"card\" onClick={() => goToLogbook([patientData])}>\n          <h5> <span class=\"card-title\">{patientData.firstname} {patientData.lastname}</span></h5>\n          <div class=\"card-image\">\n            <img src={require (\"./patientAvatar.jpeg\")  } alt=\"ty\" />\n\n            {/* <p className=\"card-text\">Some quick example text to build on the card title and make up the bulk of the card's content.</p> */}\n          \n          </div>\n\n          <div className=\"card-content\">\n            <p>email - {patientData.email}</p>\n            <p>phone - {patientData.phone_number}</p>\n          </div>\n        </div>\n      </div>\n    </>\n\n  );\n}\nexport default Secound;","import axios from \"axios\";\n// import logInbtn from \"../components/LogInBtn\"; \nconst BASE_URL = \"http://localhost:8080\"\nexport default {\n  getPatientData: (id) => axios.get(`${BASE_URL}/patient/${id}`),\n  // getPatientLog: (id) => axios.get(`${BASE_URL}/log/${id}`),\n  getAllPatients: function () {\n    console.log(\"getallpatientsrunning\")\n    return axios.get(`${BASE_URL}/patients`)\n  },\n  // getAllPatients: ()=> axios.get(`${BASE_URL}/patients`),\n  createEmployee: function (employeeData) {\n    return axios.post(`${BASE_URL}/api/employee`, employeeData, { withCredentials: true })\n  },\n  createPatient: function (patientData) {\n    console.log(\"createPatient\")\n    return axios.post(`http://localhost:8080/api/createPatient`, patientData, { withCredentials: true })\n  },\n  createManager: function (managerData) {\n    return axios.post(`${BASE_URL}/api/manager`, managerData, { withCredentials: true })\n  },\n\n  // login btn\n  getLogInbtn: (id) =>\n    axios.post(`${BASE_URL}/` + id),\n  // creating a route that appdates the patients ifo\n  updatePatientById: (data,id) => {\n    return axios.put(`${BASE_URL}/api/patient/${id}`, data)\n  },\n  login: (data) => axios.post(`${BASE_URL}/login`, data),\n  signup: (data) => axios.post(`${BASE_URL}/api/signup`, data),\n  save: (data) => axios.put(`${BASE_URL}/api/save`),\n  logout: function () {\n    return axios.get(`${BASE_URL}/logout`, { withCredentials: true })\n  },\n  saveChange: function (Data) {\n    return axios.put(`${BASE_URL}/api/patient`, Data)\n  },\n  Logout: () => axios.destroy(`${BASE_URL}/api/logout`),\n  getCurrentUser: () => axios.get('/api/currentuser')\n}\n","\n\nimport React from \"react\";\nconst Food = (props) => {\n  return (\n    <>\n      <label>\n        <input type=\"checkbox\" name=\"check1\" checked={props.isChecked} onChange={props.handleCheckbox} />\n        <span>True</span><br />\n      </label>\n      <label>\n        <input type=\"checkbox\" name=\"check2\"\n          checked={!props.isChecked} onChange={props.handleCheckbox} />\n        <span>False</span><br />\n      </label>\n    </>\n  )\n\n}\nexport default Food;","\nimport React, { useEffect, useState } from \"react\";\nimport API from '../utils/API';\nimport { useParams } from \"react-router-dom\";\nimport Food from './Food'\nimport Container from '../components/Container/Container'\nimport Calendar from \"react-calendar\"\nimport axios from \"axios\";\nimport { Link } from 'react-router-dom'\nimport { render } from \"@testing-library/react\";\nfunction LogBook(props) {\n  // created the use state to update the table\n  const [date, setDate] = useState('')\n  const [formObject, setTableObject] = useState({})\n  const [patientData, setPatientData] = useState({})\n\n\n  const params = useParams()\n  console.log(props.data)\n  // using the api a data is collected from the database by id for a single patient\n  useEffect(() => {\n    API.getPatientData(params.id).then(res => {\n      setPatientData(res.data)\n    })\n\n  }, [])\n\n  function ubdatePatient() {\n    API.updatePatientById(formObject, params.id).then(res => {\n      setPatientData(res.data)\n    })\n      .catch(err => console.log(err));\n  }\n\n  // Handles updating component state when the user types into the input field\n  function handleInputChange(event) {\n    const { name, value } = event.target;\n    setTableObject({ ...formObject, [name]: value })\n  };\n  // function for the calendar\n\n  function handleCalendarInput(date) {\n    setTableObject({ ...formObject, date })\n  }\n  function handleTableChange(event) {\n    event.preventDefault();\n    API.updatePatientById(\n      formObject, patientData.id\n    )\n      .then(res => ubdatePatient())\n      .catch(err => console.log(err));\n\n  };\n  function handleCheckbox() {\n    setTableObject({\n      ...formObject,\n      isFoodEaten: !formObject.isFoodEaten,\n      isMedicineTaken: !formObject.isMedicineTaken\n\n    })\n  }\n  function handleCheckboxf() {\n    setTableObject({\n      ...formObject,\n      isMedicine: !formObject.isMedicine\n    })\n  }\n\n  return (\n\n\n\n    <div className=\"container1\" >\n      <div className=\"row\">\n        <div className=\"col s4\">\n\n          {patientData.isMedicine ? \"\" : <h3>Patient has to take medicine!</h3>}\n          {patientData.isFoodEaten ? \"\" : <h3>Patient has to eat food!</h3>}\n          {patientData.doctorAppointment ? \"\" : <h3>Patient has to see the doctor {patientData.date}!</h3>}\n        </div>\n        <div className=\"col s8\">\n          {/* <table class=\"striped\"> */}\n          <table striped bordered hover variant=\"dark\">\n            <thead>\n              <tr className=\"table1\">\n                <th className=\"col-1\"> Item</th>\n                <th className=\"col-2\">value</th>\n                <th className=\"col-3\">  LoggedBy:{props.data ? props.data.firstname : \"\"} </th>\n\n\n                {/* <th> LoggedBy:{props.data ? props.data.firstname : \"\"}</th> */}\n\n              </tr>\n            </thead>\n\n            <tbody className=\"TableBody\">\n              <tr>\n                <td>First Name</td>\n                <td>{patientData.firstname}</td>\n                <td><input name=\"firstname\" value={formObject.firstname} onChange={handleInputChange}></input></td>\n              </tr>\n              <tr>\n                <td>Last Name</td>\n                <td>{patientData.lastname}</td>\n                <td><input name=\"lastname\" value={formObject.lastname} onChange={handleInputChange} ></input></td>\n              </tr>\n              <tr>\n                <td>Age</td>\n                <td>{patientData.age}</td>\n                <td><input name=\"age\" value={formObject.age} onChange={handleInputChange}     ></input></td>\n\n              </tr>\n              <tr>\n                <td>Address</td>\n                <td>{patientData.address}</td>\n                <td><input name=\"address\" value={formObject.address} onChange={handleInputChange}      ></input></td>\n\n              </tr>\n              <tr>\n                <td>Phone</td>\n                <td>{patientData.phone_no}</td>\n                <td><input name=\"phnoe_number \" value={formObject.phone_no} onChange={handleInputChange}     ></input></td>\n\n              </tr>\n              <tr>\n                <td>Did the patient take Medicine</td>\n                <td>{patientData.isMedicineTaken}</td>\n                <td><Food name=\"medicine \" isChecked={formObject.isMedicine} handleCheckbox={handleCheckboxf}    ></Food></td>\n\n              </tr>\n              <tr>\n\n                <td>\n                  <td>Did the patient eat Food</td>\n                  <td>{patientData.isFoodEaten}</td>\n                  <td> <Food name=\"isFoodEaten\" isChecked={formObject.isFoodEaten} handleCheckbox={handleCheckbox}></Food></td>\n\n\n                </td>\n\n              </tr>\n\n              <tr >\n                <td>Doctors Appointment</td>\n                <td>{patientData.date}</td>\n                <td><Calendar name=\"calendar\" onChange={handleCalendarInput} /></td>\n\n              </tr>\n              <tr>\n                <td>PatientReview</td><td>\n                  <label>\n                    <textarea name=\"address\" value={formObject.address} onChange={handleInputChange} />\n                  </label>\n                </td>\n              </tr>\n            </tbody>\n          </table    >\n          <button class=\"btn waves-effect dangerous\" onClick={handleTableChange}>Submit</button>\n\n          <span><Link to=\"/patient\">\n            <button class=\"btn waves-effect dangerous\">go back</button>\n          </Link> </span>\n        </div>\n\n      </div>\n\n\n    </div>\n  );\n}\nexport default LogBook;\n","import React, { useState } from 'react';\nimport Secound from './Secound';\nimport Log from './LogBook'\nimport { useHistory } from \"react-router-dom\"\n\nexport default ({ data, user, patientData }) => {\n\n  const [activePatient, setActivePatient] = useState([]);\n  const userChecking = () => {\n    if (user === 'Incorrect password!') {\n      return <h1>  Incorrect password</h1>\n    } else if (user === '') {\n      return <h1>please signup</h1>\n    } else {\n      return (\n        <>\n          <div className='row'>\n            {activePatient.length ? (\n              <Log patient={activePatient} setActivePatient={setActivePatient} />\n            ) : (\n                <div>\n                  {data && data.length ? (\n                    data.map(patientData => (\n                      <Secound\n                        patientData={patientData}\n                        goToLogbook={goToLogbook}\n                      />\n                    ))\n                  ) : (<div />)}\n                </div>\n              )}\n          </div>\n        </>)\n    }\n\n\n\n  }\n  let history = useHistory();\n  function goToLogbook(patient) {\n    setActivePatient(patient);\n    history.push(`/patient/${patient[0].id}`);\n  }\n  return (\n    < >\n      {userChecking()}\n    </>)\n}\n\n","import React from \"react\";\n\n\nfunction Footer() {\n  return (\n    <footer className=\"footer\">\n      <span>DAYA 2020</span>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import React, { useState } from \"react\";\nimport \"../layout/style.css\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport API from \"../utils/API\";\n\nimport \"../components/LogInBtn/style.css\";\nimport Dropdown from \"react-dropdown\";\nimport \"react-dropdown/style.css\";\n\nfunction Login(props) {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [code, setCode] = useState(\"\");\n  const [login, setLogin] = useState(false);\n  const [logout, setLogout] = useState(false);\n  const [userOption, setUserOption] = useState(false);\n  let history = useHistory();\n\n  const options = [\n    'Manager', 'Employee'\n  ];\n  const defaultOption = options[0];\n\n  function _onSelect(option) {\n    console.log('You selected ', option.label)\n\n    if (option.label === \"Manager\") {\n      setUserOption(true)\n\n\n    } else if (option.label === \"Employee\") {\n      setUserOption(false)\n    }\n  }\n\n  const handleLogin = () => {\n    console.log(username, password);\n    API.login({ username, password }).then((data) => {\n      // props.isLogedin(data.data)\n\n      // history.push(\"/patient\")\n      if (data.data === \"Incorrect password!\") {\n        console.log(\"wrongpassword\");\n      } else if (data.data === \"cannot find user!\") {\n        console.log(\"no user\");\n\n        // history.push(\"/patient\")\n      } else {\n        props.isLogedin(data.data);\n        console.log(\"success\");\n        history.push(\"/patient\");\n      }\n    });\n  };\n  const handleLogoutClick = (event) => {\n    API.Logout().then((res) => {\n     setLogout();\n         history.push.current('/')\n    });\n  };\n\n  const handleSignup = () => {\n    API.signup({ username, password, isAdmin: userOption }).then((data) =>\n      console.log(data)\n    );\n    console.log(\"userOption\", userOption);\n  };\n\n  return (\n    <form className=\"Card\">\n      <div class=\"login-page container\">\n        <div className=\"row\">\n          <div className=\"col s12\">\n            <div class=\"register-form\">\n              <h2>{login ? \"Log In\" : \"Sign Up\"}</h2>\n              <div>\n                <input\n                  id=\"create-name\"\n                  type=\"text\"\n                  placeholder=\"enter your name\"\n                  onChange={(e) => setUsername(e.target.value)}\n                />\n              </div>\n              <input\n                id=\"create-password\"\n                type=\"password\"\n                placeholder=\"enter your password\"\n                onChange={(e) => setPassword(e.target.value)}\n              />\n              <div />\n              {login ? (\n                \"\"\n              ) : (\n                <>\n                  <Dropdown\n                    options={options}\n                    value={defaultOption}\n                    placeholder=\"Select an option\"\n                    onChange={_onSelect}\n                  />\n                  \n                  <div />\n                </>\n              )}\n\n              <button\n                onClick={login ? handleLogin : handleSignup}\n                id=\"create-acc\"\n              >\n                {login ? \"Log In\" : \"Submit\"}\n              </button>\n\n              \n\n              {login ? (\n                <p class=\"message\">\n                  Not registered?\n                  <a onClick={() => setLogin(false)} href=\"#\">\n                    Create an account\n                  </a>\n                </p>\n              ) : (\n                <p class=\"message\">\n                  Already registered?{\" \"}\n                  <a onClick={() => setLogin(true)} href=\"#\">\n                    Log In\n                  </a>{\" \"}\n                  <button\n                onClick={logout ? handleLogoutClick : \"\"}\n                id=\"create-acc\"\n              >\n                log out\n              </button>\n                </p>\n                \n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    </form>\n  );\n}\n\nexport default Login;\n","import React from 'react'\nimport LogBook from './LogBook'\nexport default function Manager() {\n  return (\n    <div>\n      <LogBook/>\n    </div>\n  )\n}\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n// import \"./style.css\"\n\n\nfunction AddManager(props) {\n  const [managerState, setManagerState] = useState({\n    firstname: '',\n    lastname:'',\n    age: '',\n    email:''\n\n  })\n  const history = useHistory();\n  useEffect(() => {\n    if (!props.currentUser) {\n      history.push('/')\n    }\n\n  }, [props.currentUser])\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setManagerState({\n      ...setManagerState,\n      [name]: value\n    })\n  }\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    API.createManager(managerState).then(newManager => {\n      console.log(newManager)\n      setManagerState({\n\n        firstname: '',\n        lastname:'',\n        age: '',\n        email:''\n      })\n      history.push(\"/api/manager\")\n    })\n\n  }\n  return (\n    <div className=\"AddManger\">\n      <h1>RegisterManger</h1>\n      <form class=\"col s12\">\n\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"first_name\" type=\"text\" onChange={handleInputChange} name=\"firstname\" value={managerState.firstname} placeholder=\"name\" />\n            <label for=\"first_name\">First Name</label>\n          </div>\n          <div class=\"input-field col s6\">\n              <input id=\"lastname\" type=\"text\" onChange={handleInputChange} name=\"lastname\" value={managerState.lastname} placeholder=\"last_name\" />\n              <br />\n              <label for=\"lastname\">Last Name</label>\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"input-field col s6\">\n              <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"age\" value={managerState.age} placeholder=\"age\" />\n              <label for=\"age\">Age</label>\n            </div>\n            <div class=\"input-field col s6\">\n              <input id=\"phone\" type=\"text\" onChange={handleInputChange} name=\"phone\" value={managerState.phone} placeholder=\"phone\" />\n              <br />\n              <label for=\"phone\">Phone_No</label>\n            </div>\n          </div>\n          \n            <div class=\"row\">\n              <div class=\"input-field col s6\">\n                <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"email\" value={managerState.age} placeholder=\"age\" />\n                <label for=\"age\">Email</label>\n              </div>\n              \n            </div>\n            <button onClick={handleFormSubmit}>Add Manager!</button>\n      </form>\n\n    </div>\n     \n\n  )\n}\n\nexport default AddManager\n\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport API from \"../../utils/API\"\nimport \"./style.css\"\n\nfunction AddPatient(props) {\n  console.log(\"addpationsprops.currentuser\", props.currentUser)\n  const [patientState, setPatientState] = useState({\n    firstname: '',\n    lastname: '',\n    age: '',\n    email: '',\n    address: '',\n    doctor_appointment: '',\n    isMedicine: '',\n    isFoodEaten: '',\n    patientReview: ''\n  })\n  const history = useHistory();\n  useEffect(() => {\n    if (!props.currentUser) {\n      // getcurrentUser from the local storage\n      history.push('/login')\n    }\n\n  }, [props.currentUser])\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setPatientState({\n      ...setPatientState,\n      [name]: value\n    })\n  }\n  const handleFormSubmit = event => {\n    console.log(\"butnclick\")\n    event.preventDefault();\n    API.createPatient(patientState).then(newPatient => {\n      console.log(newPatient)\n      setPatientState({\n\n        firstname: '',\n        lastname: '',\n        age: '',\n        email: '',\n        address: '',\n        doctor_appointment: '',\n        isMedicine: '',\n        isFoodEaten: '',\n        patientReview: ''\n      })\n      history.push(\"/patient\")\n    }).catch(err => console.log(err))\n\n  }\n  return (\n    <div className=\"  addpatient\">\n      <h1>Register patient</h1>\n      <form class=\"col s12\">\n\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"first_name\" type=\"text\" onChange={handleInputChange} name=\"firstname\" value={patientState.firstname} placeholder=\"name\" />\n            <label for=\"first_name\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n            <input id=\"lastname\" type=\"text\" onChange={handleInputChange} name=\"lastname\" value={patientState.lastname} placeholder=\"last_name\" />\n            <br />\n            <label for=\"lastname\"></label>\n          </div>\n        </div>\n\n\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"age\" value={patientState.age} placeholder=\"age\" />\n            <label for=\"age\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n            <input id=\"phone\" type=\"text\" onChange={handleInputChange} name=\"phone\" value={patientState.phone_no} placeholder=\"phone\" />\n            <br />\n            <label for=\"phone\"></label>\n          </div>\n        </div>\n\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"address\" value={patientState.address} placeholder=\"address\" />\n            <label for=\"age\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n            <input id=\"email\" type=\"text\" onChange={handleInputChange} name=\"email\" value={patientState.email} placeholder=\"email\" />\n            <br />\n            <label for=\"email\"></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"isMedicine\" type=\"text\" onChange={handleInputChange} name=\"isMedicine\" value={patientState.isMedicine} placeholder=\"medicine\" />\n            <label for=\"isMedicine\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n            <input id=\"isFoodEaten\" type=\"text\" onChange={handleInputChange} name=\"end_time\" value={patientState.isFoodEaten} placeholder=\"team\" />\n            <br />\n            <label for=\"isFoodEaten\"></label>\n          </div>\n        </div>\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"email\" type=\"text\" onChange={handleInputChange} name=\"email\" value={patientState.email} placeholder=\"name\" />\n            <label for=\"email\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n            <input id=\"last_name\" type=\"text\" onChange={handleInputChange} name=\"hireDate\" value={patientState.patientReview} placeholder=\"Hiredate\" />\n            <br />\n            <label for=\"last_name\"> </label>\n          </div>\n        </div>\n\n        <div class=\"row\"></div>\n        <div class=\"input-field col s6\">\n          <input id=\"date\" type=\"text\" onChange={handleInputChange} name=\"date\" value={patientState.date} placeholder=\"date\" />\n          <label for=\"date\"></label>\n        </div>\n        <div class=\"input-field col s6\">\n          <input id=\"bonus\" type=\"text\" onChange={handleInputChange} name=\"date\" value={patientState.date} placeholder=\"date\" />\n          <br />\n          <label for=\"date\"></label>\n        </div>\n        <button onClick={handleFormSubmit}> Submit</button>\n      </form>\n\n    </div>\n\n\n  )\n}\n\nexport default AddPatient;\n\n\n","import React, { useState, useEffect } from 'react'\nimport { useHistory } from \"react-router-dom\"\nimport API from \"../../utils/API\"\n// import \"./style.css\"\n \n\nfunction AddEmployee(props) {\n  const [employeeState, setEmployeeState] = useState({\n    firstname: '',\n    lastname:'',\n    age: '',\n    phone_no: '',\n    email: '',\n    hireDate: '',\n    salary: '',\n    bonus: '',\n    start_time: '',\n    end_time: ''\n\n\n\n\n  })\n  const history = useHistory();\n  useEffect(() => {\n    if (!props.currentUser) {\n      history.push('/api/employee')\n    }\n\n  }, [props.currentUser])\n\n  const handleInputChange = event => {\n    const { name, value } = event.target;\n    setEmployeeState({\n      ...setEmployeeState,\n      [name]: value\n    })\n  }\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    API.createEmployee(employeeState).then(newEmployee => {\n      console.log(newEmployee)\n      setEmployeeState({\n\n        firstname: '',\n        lastname:'',\n        age: '',\n        phone_no: '',\n        email: '',\n        hireDate: '',\n        salary: '',\n        bonus: '',\n        start_time: '',\n        end_time: ''\n      })\n      history.push(\"/api/employee\")\n    })\n\n  }\n  return (\n    <div className=\"addemployee\">\n      <h1>Register an employee</h1>\n      <form class=\"col s12\">\n\n        <div class=\"row\">\n          <div class=\"input-field col s6\">\n            <input id=\"first_name\" type=\"text\" onChange={handleInputChange} name=\"firstname\" value={employeeState.firstname} placeholder=\"name\" />\n            <label for=\"first_name\"></label>\n          </div>\n          <div class=\"input-field col s6\">\n              <input id=\"lastname\" type=\"text\" onChange={handleInputChange} name=\"lastname\" value={employeeState.lastname} placeholder=\"last_name\" />\n              <br />\n              <label for=\"lastname\"></label>\n            </div>\n          </div>\n\n\n          <div class=\"row\">\n            <div class=\"input-field col s6\">\n              <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"age\" value={employeeState.age} placeholder=\"age\" />\n              <label for=\"age\"></label>\n            </div>\n            <div class=\"input-field col s6\">\n              <input id=\"phone\" type=\"text\" onChange={handleInputChange} name=\"phone\" value={employeeState.phone} placeholder=\"phone\" />\n              <br />\n              <label for=\"phone\"></label>\n            </div>\n          </div>\n          \n            <div class=\"row\">\n              <div class=\"input-field col s6\">\n                <input id=\"age\" type=\"text\" onChange={handleInputChange} name=\"age\" value={employeeState.age} placeholder=\"age\" />\n                <label for=\"age\"></label>\n              </div>\n              <div class=\"input-field col s6\">\n                <input id=\"phone\" type=\"text\" onChange={handleInputChange} name=\"phone\" value={employeeState.phone} placeholder=\"phone\" />\n                <br />\n                <label for=\"phone\"></label>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"input-field col s6\">\n                <input id=\"first_name\" type=\"text\" onChange={handleInputChange} name=\"start_time\" value={employeeState.name} placeholder=\"name\" />\n                <label for=\"start_time\"></label>\n              </div>\n              <div class=\"input-field col s6\">\n                <input id=\"end_time\" type=\"text\" onChange={handleInputChange} name=\"end_time\" value={employeeState.end_time} placeholder=\"team\" />\n                <br />\n                <label for=\"end_time\"></label>\n              </div>\n            </div>\n            <div class=\"row\">\n              <div class=\"input-field col s6\">\n                <input id=\"email\" type=\"text\" onChange={handleInputChange} name=\"email\" value={employeeState.email} placeholder=\"name\" />\n                <label for=\"email\"></label>\n              </div>\n              <div class=\"input-field col s6\">\n                <input id=\"last_name\" type=\"text\" onChange={handleInputChange} name=\"hireDate\" value={employeeState.hiredate} placeholder=\"Hiredate\" />\n                <br />\n                <label for=\"last_name\"> </label>\n              </div>\n            </div>\n\n            <div class=\"row\"></div>\n            <div class=\"input-field col s6\">\n              <input id=\"salary\" type=\"text\" onChange={handleInputChange} name=\"salary\" value={employeeState.salary} placeholder=\"name\" />\n              <label for=\"salary\"></label>\n            </div>\n            <div class=\"input-field col s6\">\n              <input id=\"bonus\" type=\"text\" onChange={handleInputChange} name=\"bonus\" value={employeeState.bonus} placeholder=\"team\" />\n              <br />\n              <label for=\"bonus\"></label>\n            </div>\n            <button onClick={handleFormSubmit}>Add Employee!</button>\n      </form>\n\n    </div>\n     \n\n  )\n}\n\nexport default AddEmployee;\n\n\n","\nimport React , {Component} from \"react\";\nimport {Redirect}  from \"react-router-dom\"\n\nclass Logout extends Component {\n\nstate={\n  navigate:false\n};\nlogout = ()=>{\n  localStorage.clear(\"token\")\n  this.setState({navigate:true})\n}\n\n\n  render(){\n    const {navigate}=this.setState;\n    if(navigate){\n      return<Redirect to=\"login\" push={true}/>\n    }\n    return<button onclick={this.logout}>Log out</button>\n  }\n}\nexport default Logout\n","import React from 'react';\n// import Secound from './layout/Secound'\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n \n \n\n// import './App.css';\n\nimport Navbar from './components/Navbar';\nimport Patient from './layout/Patient';\nimport API from './utils/API';\nimport Footer from \"./components/Footer\";\nimport LogBook from './layout/LogBook'\nimport Login from './layout/Login';\nimport Employee from './layout/employee';\nimport Manager from './layout/Manager';\nimport AddManager from './layout/AddManager';\nimport AddPatient from './layout/AddPatients';\nimport AddEmployee from './layout/AddEmployee';\nimport Logout from \"./layout/Logout\";\n\nclass App extends React.Component {\n  state = { data:{} , user: {firstname: 'devin'}}\n\n  isLogedin = (userData) => {\n    console.log(userData)\n    this.setState({\n      user: userData,\n      \n    })\n    localStorage.setItem('currentUser', JSON.stringify(userData))\n  }\n\n  componentDidMount() {\n    console.log(\"componentDidMount\")\n  //  const currentUser= JSON.parse(localStorage.getItem('currentUser') )\n  //  if(currentUser){\n  //    console.log('in app', currentUser)\n  //     this.setState({user:currentUser.user})\n  //  }\n\n  //  const currentUser= localStorage.getItem('currentUser') ? this.setState(JSON.parse(localStorage.getItem('currentUser'))) :\n   \n   API.getAllPatients()\n      .then(res=>{\n       this.setState({data:res.data})\n      }).catch(err=>console.log(err))\n  }\n\n\n\n\n  render() {\n    return (\n   \n  <Router> \n   \n        <Navbar currentUser={this.state.user} />\n       \n        <Route exact path={[ \"/\",\"/login\"]} component={() => <Login isLogedin={this.isLogedin} />} />\n        <Route exact path=\"/logbook/:id\" component={() => <LogBook data={this.state.user} />} />\n        <Route exact path=\"/patient/:id\" component={Manager} />\n        <Route exact path=\"/api/logout\" component={Logout} />\n        <Route exact path=\"/patient\" component={Patient} />\n        <Route exact path=\"/api/manager\" component={AddManager}/>\n        <Route exact path=\"/api/employee\" component={AddEmployee}/>\n        <Route exact path=\"/newEntry\" component={() => <AddPatient currentUser={this.state.user}  />} />\n        {/* <Route exact path=\"/patient/:id\" component={LogBook} /> */}\n        {/* <Route exact path=\"/apiLogbook/:id\" component={Employee} /> */}\n        <Route exact path=\"/patient\" component={() => <Patient data={this.state.data} user={this.state.user} />} />\n\n        <Footer/>\n</Router> \n     \n\n\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}